{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/games.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nexport let GameFormComponent = /*#__PURE__*/(() => {\n  class GameFormComponent {\n    constructor(gamesService, router, activedRoute) {\n      this.gamesService = gamesService;\n      this.router = router;\n      this.activedRoute = activedRoute;\n      this.classes = 'row';\n      this.game = {\n        id: 0,\n        title: '',\n        description: '',\n        image: '',\n        created_at: new Date()\n      };\n      this.edit = false;\n    }\n\n    ngOnInit() {\n      const params = this.activedRoute.snapshot.params;\n\n      if (params['id']) {\n        this.gamesService.getGame(params['id']).subscribe(resp => {\n          console.log(resp);\n          this.game = resp;\n          this.edit = true;\n        }, err => console.error(err));\n      }\n    }\n\n    saveNewGame() {\n      delete this.game.created_at; //Elimina sólo del objeto a enviar estos datos, ya que son generados por la base de datos directamente y no necesitan ser enviados.\n\n      delete this.game.id;\n      this.gamesService.saveGames(this.game).subscribe(resp => {\n        console.log(resp);\n        this.router.navigate(['/games']);\n      }, err => console.error(err)); // console.log(this.game); //Sólo visualizamos el objeto para ver cómo se está creando.\n    }\n\n    updateGame() {\n      delete this.game.created_at;\n      let number = Number(this.game.id);\n      this.gamesService.updateGame(number, this.game).subscribe(resp => {\n        console.log(resp);\n        this.router.navigate(['/games']);\n      }, err => console.error(err));\n    }\n\n  }\n\n  GameFormComponent.ɵfac = function GameFormComponent_Factory(t) {\n    return new (t || GameFormComponent)(i0.ɵɵdirectiveInject(i1.GamesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  GameFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameFormComponent,\n    selectors: [[\"app-game-form\"]],\n    hostVars: 2,\n    hostBindings: function GameFormComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.classes);\n      }\n    },\n    decls: 22,\n    vars: 11,\n    consts: [[1, \"col-md-4\", \"offset-md-2\"], [1, \"card\"], [1, \"card-body\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"title\", \"placeholder\", \"Title\", \"autofocus\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"textarea\", \"name\", \"description\", \"placeholder\", \"Description\", \"rows\", \"2\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"url\", \"name\", \"image\", \"placeholder\", \"Image\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", \"btn-block\", 3, \"click\"], [1, \"col-md-4\"], [1, \"card\", \"card-body\", \"text-center\"], [1, \"card-img-top\", 3, \"src\"]],\n    template: function GameFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\")(4, \"div\", 3)(5, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function GameFormComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.game.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function GameFormComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.game.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\")(9, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function GameFormComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.game.image = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function GameFormComponent_Template_button_click_10_listener() {\n          return ctx.edit ? ctx.updateGame() : ctx.saveNewGame();\n        });\n        i0.ɵɵtext(11, \" SAVE \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 9);\n        i0.ɵɵelement(14, \"img\", 10);\n        i0.ɵɵelementStart(15, \"h3\");\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"date\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.game.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.game.description);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.game.image);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"src\", ctx.game.image == \" \" ? \"/assets/noimage.jpg\" : ctx.game.image, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.game.id, \".\", ctx.game.title == \" \" ? \"Game Title\" : ctx.game.title, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.game.description == \" \" ? \"Write your Description\" : ctx.game.description);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(21, 8, ctx.game.created_at, \"yyyy-MM-dd\"), \"\");\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    pipes: [i4.DatePipe],\n    styles: [\"\"]\n  });\n  return GameFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}